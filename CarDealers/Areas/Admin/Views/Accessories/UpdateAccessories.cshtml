@model CarDealers.Areas.Admin.Models.AccessoriesViewModel.UpdateAccessoriesViewModel
@{
    ViewData["Title"] = "Update Accessories";
}
<style>
    .resized-img {
        width: 100px; /* Set the desired width */
        height: 100px; /* Set the desired height */
    }
</style>
<div class="content-wrap">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <div class="col-lg-12">
        <div class="card">
            @using (Html.BeginForm("UpdateAccessories", "Accessories", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <!-- Hidden field for BrandId -->
                @Html.HiddenFor(model => model.AccessoryId)

                <div class="form-group">
                    @Html.LabelFor(model => model.AccessoryName)
                    @Html.TextBoxFor(model => model.AccessoryName, new { @class = "form-control input-rounded" })
                    <div style="color : red">
                        @Html.ValidationMessageFor(model => model.AccessoryName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity)
                    @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control input-rounded", type = "text", id = "quantityInput"  })
                    <div style="color : red">
                        @Html.ValidationMessageFor(model => model.Quantity)
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.ImportPrice)
                    @Html.TextBoxFor(model => model.ImportPrice, new { @class = "form-control input-rounded", type = "text", id = "importPriceInput" })
                    <div style="color : red">
                        @Html.ValidationMessageFor(model => model.ImportPrice)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ExportPrice)
                    @Html.TextBoxFor(model => model.ExportPrice, new { @class = "form-control input-rounded", type = "text", id = "exportPriceInput" })
                    <div style="color : red">
                        @Html.ValidationMessageFor(model => model.ExportPrice)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description)
                    <!-- Trường văn bản cho CKEditor -->
                    @Html.TextAreaFor(model => model.Description, new { @id = "editor" })

                    <script>
                        CKEDITOR.replace("editor");
                    </script>
                </div>

                <!-- Display the current logo image, if it exists -->
                <div class="form-group">
                    @if (Model.Image != null)
                    {
                        <label for="currentLogoImage">Current Logo Image</label>
                        <br />
                        <img src="@Url.Content("~/" + Model.Image)" alt="Accessories Logo" class="resized-img">
                        <br />
                    }
                    @Html.HiddenFor(model => model.Image)
                </div>

                <!-- Allow the user to upload a new logo image -->
                <div class="form-group">
                    @Html.LabelFor(model => model.Image, "Upload Image")
                    <input type="file" id="image" name="image" class="form-control-file" />
                    <div style="color: red">
                        @Html.ValidationMessageFor(model => model.Image)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Status)
                    <br />
                    <input type="radio" name="Status" id="option1" value="true" @(Model.Status == true ? "checked" : "")>
                    <label style="margin-right: 10px;" for="option1">Stock</label>

                    <input type="radio" name="Status" id="option2" value="false" @(Model.Status == false ? "checked" : "")>
                    <label for="option2">Out of stock</label>

                    <div style="color : red">
                        @Html.ValidationMessageFor(model => model.Status)
                    </div>
                </div>

                <script>
                    $(document).ready(function () {
                        $("#exportPriceInput, #importPriceInput, #quantityInput").on('input', function () {
                            formatNumberInput(this);
                        });
                    });

                    function formatNumberInput(inputElement) {
                        var value = inputElement.value;
                        // Remove all characters except numbers and commas
                        value = value.replace(/[^0-9,]/g, '');
                        // value = value.replace(/^0+/, ''); // Remove leading zeros
                        value = value.replace(/,/g, ''); // Remove commas
                        value = value.replace(/\B(?=(\d{3})+(?!\d))/g, ','); // Add commas for thousands separator
                        inputElement.value = value;
                    }
                </script>
                <button type="submit" formaction="~/admin/Accessories/ListAccessories" class="btn btn-danger custom-button">Cancel</button>
                <button type="submit" class="btn btn-dark">Save Changes</button>
            }
        </div>
    </div>
</div>
