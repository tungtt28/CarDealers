@model CarDealers.Entity.News
@{
    ViewBag.Title = "Update News";
}
<div class="content-wrap">
    <div class="col-lg-12">
        <div class="card">
            @using (Html.BeginForm("UpdateNews", "News", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()


                <div class="form-group">
                    <label for="newsType">News Type:</label>
                    @Html.DropDownList("NewsTypeId", (IEnumerable<SelectListItem>)ViewBag.NewsTypeOptions,"", new { @class = "form-control" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title)
                    @Html.TextBoxFor(model => model.Title, new { @class = "form-control input-rounded" })
                    <div style="color : red">
                        @Html.ValidationMessageFor(x => x.Title)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Content)
                    <br>

                    <!-- Trường văn bản cho CKEditor -->
                @Html.TextAreaFor(model => model.Content, new { @id = "editor" })

                    <script>
                        CKEDITOR.replace("editor");
                    </script>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Order)
                    @Html.TextBoxFor(model => model.Order, new { @class = "form-control input-rounded", type = "number", id = "orderInput", min = 1 })
                    <div style="color: red">
                        @Html.ValidationMessageFor(model => model.Order)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PublishDate)
                    @Html.TextBoxFor(model => model.PublishDate, new { @class = "form-control input-rounded" })
                    <div style="color : red">
                        @Html.ValidationMessageFor(x => x.PublishDate)
                    </div>
                </div>

                <!-- Display the current logo image, if it exists -->
                <div class="form-group">
                    @if (Model.Image != null)
                    {
                        <label for="currentLogoImage">Current Logo Image</label>
                        <br />
                        <img src="@Url.Content("~/" + Model.Image)" alt="News Image" class="resized-img">
                        <br />
                    }
                    @Html.HiddenFor(model => model.Image)
                </div>

                <!-- Allow the user to upload a new logo image -->
                <div class="form-group">
                    @Html.LabelFor(model => model.Image, "Upload New Logo Image")
                    <input type="file" id="NewsImage" name="NewsImage" class="form-control-file" />
                    <div style="color: red">
                        @Html.ValidationMessageFor(model => model.Image)
                    </div>
                </div>

                @if (TempData["ErrorMessageImage"] != null)
                {
                    <div class="alert alert-danger">
                        @TempData["ErrorMessageImage"]
                    </div>
                }


                @Html.HiddenFor(model => model.NewsId)
                <!-- Add form fields for other properties you want to edit -->

                <button type="submit" class="btn btn-primary">Save Changes</button>
            }
        </div>
        <a style="float:right" class="btn btn-dark" href="~/admin/News/ListNews">Back to list</a>
    </div>
</div>
