@model CarDealers.Areas.Admin.Models.OrderAccessoriesViewModel.UpdateOrderAccessoriesViewModel
@{
    ViewBag.Title = "Update Order Accessories";
}
<style>
    .select-sm {
        height: 100px; /* Adjust the height as needed */
        /* Add any other styling you want */
    }

    .form-edit {
        height: 70px; /* Adjust the height as needed */
        /* Add any other styling you want */
    }

    .btn-check {
        display: inline-block;
        width: 20px; /* Adjust the size of the tick */
        height: 20px; /* Adjust the size of the tick */
        background: url('checkmark.png') center center no-repeat; /* Use your own image for the checked tick */
        background-size: cover;
        vertical-align: middle;
    }

    .btn-text {
        padding-left: 10px; /* Adjust the spacing between the tick and the text */
    }
</style>
<div class="content-wrap">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <div class="row">
        <div class="col-lg-12">
            @using (Html.BeginForm("UpdateOrderAccessories", "OrderAccessories", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {

                @Html.AntiForgeryToken()
                <div class="card">
                    <div class="row">
                        <div class="col-lg-6">
                            @Html.HiddenFor(model => model.OrderId)
                            <div class="form-group">
                                @Html.LabelFor(model => model.AccessoryId, "Accessory")
                                @Html.ListBoxFor(model => model.SelectedAccessories, new MultiSelectList(Model.AccessoryList, "Value", "Text") , new { @class = "form-control select-sm"})
                                @Html.ValidationMessageFor(model => model.SelectedAccessories, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CouponId, "Coupon")
                                @Html.DropDownListFor(model => model.CouponId, Model.CouponList, new { @class = "form-control input-rounded" })
                                <div style="color: red">
                                    @Html.ValidationMessageFor(model => model.CouponId)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FullName)
                                @Html.TextBoxFor(model => model.FullName, new { @class = "form-control input-rounded" })
                                <div style="color: red">
                                    @Html.ValidationMessageFor(model => model.FullName)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PhoneNumber)
                                @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control input-rounded" })
                                <div style="color: red">
                                    @Html.ValidationMessageFor(model => model.PhoneNumber)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Email)
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control input-rounded" })
                                <div style="color: red">
                                    @Html.ValidationMessageFor(model => model.Email)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Status)
                                @Html.DropDownListFor(model => model.Status, Model.StatusList, new { @class = "form-control input-rounded" })
                                <div style="color : red">
                                    @Html.ValidationMessageFor(model => model.Status)
                                </div>
                            </div>

                        </div>

                    </div>

                    <div class="row">
                        <div class="col-lg-10">
                        </div>
                        <div class="col-lg-2">
                            <div class="row">
                                <div class="form-group custom-form-group d-flex">
                                    <button type="submit" formaction="~/admin/OrderAccessories/ListOrderAccessories" class="btn btn-danger custom-button">Cancel</button>
                                    <button type="submit" class="btn btn-dark custom-button">Update Order Accessories</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

